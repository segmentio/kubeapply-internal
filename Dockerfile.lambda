# Fetch or build all required binaries

FROM public.ecr.aws/lambda/provided:al2 AS builder

ADD https://go.dev/dl/go1.23.0.linux-amd64.tar.gz /tmp/go1.23.0.linux-amd64.tar.gz

ARG VERSION_REF
RUN test -n "${VERSION_REF}"

ENV SRC=github.com/segmentio/kubeapply
ENV PATH=/usr/local/go/bin:/root/go/bin:/var/lang/bin:/usr/local/bin:/usr/bin/:/bin:/opt/bin

RUN yum install -y \
    curl \
    git \
    gzip \
    make \
    tar \
    unzip \
    which \
    wget

COPY . /go/src/${SRC}

RUN cd /usr/local \
    && tar xf /tmp/go1.23.0.linux-amd64.tar.gz \
    && cd /usr/local/bin \
    && go env \
    && /go/src/${SRC}/scripts/pull-deps.sh

WORKDIR /go/src/${SRC}

RUN make kubeapply VERSION_REF=${VERSION_REF} && \
    cp build/kubeapply /usr/local/bin
RUN make kubeapply-lambda VERSION_REF=${VERSION_REF} && \
    cp build/kubeapply-lambda /usr/local/bin

# Copy into final image from builder
FROM public.ecr.aws/lambda/provided:al2

RUN yum install -y git unzip && yum clean all

# Not sure if awscli is needed for running lambda, but keeping it here for now
RUN curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
    && unzip awscliv2.zip \
    && ./aws/install \
    && rm -rf aws awscliv2.zip

COPY --from=builder \
    /usr/local/bin/aws-iam-authenticator \
    /usr/local/bin/helm \
    /usr/local/bin/kubectl \
    /usr/local/bin/kubeapply \
    /usr/local/bin/

COPY --from=builder /usr/local/bin/kubeapply-lambda /kubeapply-lambda

ENTRYPOINT ["/kubeapply-lambda"]
